package ie.brianhenry.veintobrain.representations;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertTrue;
import ie.brianhenry.veintobrain.core.ComputeAnalyteStats;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Date;
import java.util.List;

import org.junit.Test;

public class AnalyteStatTest {

	@SuppressWarnings("deprecation")
	@Test
	public void constructor() {

		Date statDate = new Date();
		statDate.setYear(2009);
		statDate.setMonth(0);
		statDate.setDate(2);

		String statType = "Folate";

		String[] readings = { "11.1", "14.5", "17.9", "8.7", "15.7", "12.3", "2.8", "14.9", "4.5", "7.8", "6.6",
				"10.6", "23.0", "19.0", "4.7", "9.5", "7.1", "13.5", "9.5", "3.5", "16.1", "21.7", "11.2", "9.8",
				"13.8", "20.7", "6.6", "4.2", "6.2", "19.9", "15.9", "21.8", "9.0" };

		AnalyteDate day = new AnalyteDate(statType, statDate, readings);

		// Maybe this should take in an array of number and just have getters
		AnalyteStat folate02Jan2009 = ComputeAnalyteStats.computeDay(day, statType);

		double min = 2.8;
		double i2p5th = 3.36;
		double i25th = 7.1;
		double median = 11.1;
		double mean = 11.942;
		String[] mode = new String[] { "6.6", "9.5" };
		double i75th = 15.9;
		double i97p5th = 22.04;
		double max = 23.0;

		assertEquals(statDate, folate02Jan2009.getIncludedDates().get(0));
		assertEquals(statType, folate02Jan2009.getAnalyteType());

		assertEquals(min, folate02Jan2009.getMin(), 0.001);
//		assertEquals(i2p5th, folate02Jan2009.getPercentile(0.025), 0.001);
//		assertEquals(i25th, folate02Jan2009.getPercentile(0.25), 0.001);
//		assertEquals(median, folate02Jan2009.getPercentile(0.5), 0.001);
		assertEquals(mean, folate02Jan2009.getMean(), 0.001);
		//assertTrue(Arrays.asList(mode).contains(folate02Jan2009.getMode()[0]));
//		assertEquals(i75th, folate02Jan2009.getPercentile(0.75), 0.001);
//		assertEquals(i97p5th, folate02Jan2009.getPercentile(0.975), 0.001);
		assertEquals(max, folate02Jan2009.getMax(), 0.001);

	}

	@Test
	public void psaTest() {

		AnalyteStat psa = ComputeAnalyteStats.computeMonth(psaJuly(), "psa", 7);
		
		// Values from Excel

		int total = 2346;
		// numeric excluding <0.03 = 2277
		// numeric including 0.029 = 2339
		int totalValid = 2339;
		// other "U" = 7
		Integer countU = 7;

		// Min 0.029
		// 2.5 0.029
		// 25 0.71
		// 50 1.35
		// 75 3.16
		// 97.5 20.31
		// Max 10106

		// 65th 2.127

		// Mean: 9.458323215

		// TODO These test figures are wrong becuase we're now filtering out weekends!
		
//		assertEquals(total, psa.getInputCount());
//		assertEquals(totalValid, psa.getValidCount());
//		assertEquals(countU, psa.getOtherData().get("U"));
//
//		assertEquals(0.029, psa.getMin(), 0.001);
//
//		assertEquals(0.029, psa.getPercentile(0.025), 0.001);
//		assertEquals(0.71, psa.getPercentile(0.25), 0.001);
//		assertEquals(1.35, psa.getPercentile(0.5), 0.001);
//		assertEquals(3.16, psa.getPercentile(0.75), 0.001);
//		assertEquals(20.31, psa.getPercentile(0.975), 0.001);
//
//		assertEquals(2.127, psa.getPercentile(0.65), 0.001);
//
//		assertEquals(10106, psa.getMax(), 0.001);
//
//		assertEquals(9.458, psa.getMean(), 0.001);

		// TODO lots more tests
	}

	@SuppressWarnings("deprecation")
	public List<AnalyteDate> psaJuly() {
		List<AnalyteDate> psa = new ArrayList<AnalyteDate>();

		psa.add(new AnalyteDate("psa", new Date(Date.UTC(2013, 6, 1, 0, 0, 0)), new String[] { "1.25", "12.53", "0.56",
				"1.95", "4.04", "1.57", "161.6", "6.12", "10106", "0.76", "1.67", "0.65", "1.37", "1.06", "2.02",
				"1.78", "2.82", "2.91", "0.65", "1.19", "4.25", "<0.03", "2.7", "0.65", "2.21", "3.15", "U", "0.77",
				"0.29", "2.77", "1.03", "3.43", "2.52", "12.71", "1.29", "9.66", "8.58", "0.23", "7.76", "1.45",
				"0.52", "1.86", "41.89", "9.67", "2.01", "2.53", "3.83", "0.24", "0.06", "0.68", "3.05", "0.29",
				"0.75", "1.32", "0.74", "0.97", "1.29", "7.41", "0.15", "2.89", "1.92", "1.26", "1.28", "3.18", "1.38",
				"0.41", "0.56", "3.31", "0.9", "0.47", "<0.03", "8.89", "0.81", "2.93", "1.05", "1.58", "1.25", "3.6",
				"1.02", "16.35", "0.31", "0.62", "1.24", "0.07", "0.82", "4.89", "0.29", "1.96", "2.85", "0.57",
				"0.76", "6.73", "0.63", "0.53", "<0.03", "3.42" }));
		psa.add(new AnalyteDate("psa", new Date(Date.UTC(2013, 6, 2, 0, 0, 0)), new String[] { "0.87", "3.5", "4.97",
				"0.77", "7.34", "0.75", "1.67", "1.18", "6.34", "74.28", "1.29", "1.61", "0.69", "1.78", "0.88",
				"2.24", "0.52", "0.34", "41.18", "2.17", "1.44", "2", "1.92", "0.52", "3.98", "2.04", "0.43", "0.92",
				"0.81", "0.26", "3.08", "5.61", "0.7", "0.98", "1.51", "0.82", "1.99", "0.29", "0.74", "1.07", "2.32",
				"0.97", "0.74", "<0.03", "0.51", "1.34", "1.17", "0.45", "0.54", "1.15", "0.3", "1.41", "1.21", "6.93",
				"<0.03", "0.63", "9.68", "0.79", "0.31", "1.72", "0.68", "17.16", "1.32", "0.97", "2.71", "27.43",
				"1.51", "3.1", "0.4", "0.83", "11.15", "1.33", "1.36", "13.95", "1.99", "3.15", "3.09", "0.83", "1.05",
				"0.35", "18.8", "1.64", "0.6", "1.61", "4.97", "0.6", "1.62", "1.24", "2.07", "0.54", "<0.03", "5.9",
				"0.14", "1.56", "0.88", "0.51", "0.38", "5.5", "0.33", "0.03", "3.96", "1.83", "1.82", "0.89", "2.51",
				"1", "0.53", "5.07", "0.56", "0.75", "2", "0.4", "4.4", "5.74", "3.55", "0.43", "2.7", "1.65", "0.71",
				"0.71", "0.26", "1.68", "1.82", "1.44", "8.14", "0.85", "0.52", "0.54", "0.72", "U", "4.29", "12.57",
				"0.87", "0.55" }));
		psa.add(new AnalyteDate("psa", new Date(Date.UTC(2013, 6, 3, 0, 0, 0)), new String[] { "1.03", "0.53", "0.87",
				"1.93", "0.82", "1.24", "2.75", "0.7", "0.44", "0.93", "3.7", "1.27", "0.22", "0.25", "0.94", "0.32",
				"7.19", "0.17", "1.25", "2.87", "2.37", "1.07", "1.03", "3.67", "0.99", "0.37", "61.48", "6.72",
				"1.96", "1.38", "1.78", "0.51", "1.47", "0.39", "0.78", "1.58", "4.04", "0.29", "14.21", "6", "0.89",
				"14.53", "0.66", "19.47", "137.3", "0.71", "2.02", "0.79", "0.43", "0.51", "0.69", "1.61", "1.34",
				"0.61", "0.04", "0.44", "5", "0.54", "2.2", "<0.03", "1.3", "<0.03", "8.2", "1.18", "3.22", "0.08",
				"1.99", "0.76", "<0.03", "<0.03", "1.43", "0.91", "0.62", "1", "0.06", "1.9", "0.88", "5.95", "2.37",
				"<0.03", "0.71", "1.86", "0.79", "1.54", "0.97", "2.49", "18.07", "1.64", "2", "1.35", "0.6", "0.8",
				"1.29", "2.73", "1.24", "<0.03", "1.07", "1.09", "3.26", "0.87", "1.16", "0.36", "2.66", "0.87",
				"3.88", "4.58", "3.02", "3.71", "10.93", "0.09", "2.31", "0.94", "0.42" }));
		psa.add(new AnalyteDate("psa", new Date(Date.UTC(2013, 6, 4, 0, 0, 0)), new String[] { "4.2", "0.09", "4.96",
				"34.6", "0.39", "0.98", "1.95", "0.49", "0.9", "4.73", "1.42", "2.02", "0.86", "<0.03", "0.7", "6.51",
				"3.8", "1.76", "<0.03", "0.47", "0.68", "0.2", "4.28", "2.77", "3.44", "0.78", "0.73", "1.3", "0.18",
				"U", "1.02", "1.94", "1.49", "3.99", "1.41", "U", "2.88", "13.71", "0.16", "1.05", "6.37", "1.4",
				"0.54", "0.8", "1.36", "4.89", "42.27", "0.94", "1.96", "0.56", "<0.03", "1.21", "26.21", "1.71",
				"4.15", "1.85", "0.81", "1.78", "0.72", "1.04", "<0.03", "<0.03", "0.87", "0.72", "0.54", "1.34",
				"0.23", "0.12", "1.67", "8.87", "<0.03", "0.95", "0.46", "<0.03", "5.63", "4.43", "3.52", "1.55",
				"1.93", "<0.03", "0.23", "4.97", "2.13", "0.77", "10.14", "1.13", "0.48", "0.57", "1.93", "0.41",
				"8.85", "0.69", "0.28", "1.18", "0.89", "5.29", "3.28", "2.97", "4.64", "1.31", "0.54", "0.5" }));
		psa.add(new AnalyteDate("psa", new Date(Date.UTC(2013, 6, 5, 0, 0, 0)), new String[] { "30.89", "0.47", "1.27",
				"3.88", "0.57", "1.57", "1.66", "0.09", "5.31", "1.47", "5.48", "0.72", "1.74", "1.31", "1.72", "1.75",
				"2.21", "7.94", "1.11", "4.03", "3.58", "3.97", "0.32", "10.2", "0.64", "2.85", "1.54", "8.04", "1.77",
				"1.53", "0.55", "1.62", "10.54", "0.57", "2.18", "2", "1.42", "0.65", "0.46", "18.42", "0.84", "1.57",
				"0.49", "1.33", "3.73", "0.27", "0.46", "0.53", "0.68", "0.35", "1.49", "0.73", "108.7", "1.9", "1.34",
				"2.46", "2.97", "20.2", "0.61", "0.34", "0.6", "8.13", "0.45", "0.79", "2.29", "0.49", "1.26", "1.9",
				"0.8", "15.25", "0.5", "4.8", "1.49", "3.32", "1.42", "6.2", "23.88", "5.1", "0.49", "0.99", "5.99",
				"1.01", "0.66", "0.45", "0.65", "0.88", "0.62", "0.61", "0.6", "1.15", "1.56", "13.75", "2.11", "0.71",
				"20.54", "1.25", "1.73", "0.61", "8.58", "0.2", "0.71", "1.08", "0.66", "1.81", "<0.03", "0.52",
				"2.44", "1.23" }));
		psa.add(new AnalyteDate("psa", new Date(Date.UTC(2013, 6, 7, 0, 0, 0)), new String[] { "6.09" }));
		psa.add(new AnalyteDate("psa", new Date(Date.UTC(2013, 6, 8, 0, 0, 0)), new String[] { "0.77", "6.56", "0.32",
				"0.73", "0.91", "1.37", "0.56", "0.2", "0.83", "1.5", "1.62", "0.45", "<0.03", "0.32", "0.97", "6.18",
				"1.8", "2.83", "3.05", "3.7", "2.38", "9.44", "0.65", "0.96", "0.45", "1.68", "0.24", "1.05", "0.96",
				"4.3", "0.66", "3.01", "0.35", "1.08", "0.3", "1.8", "1.14", "36.46", "0.95", "3.21", "4.35", "1.73",
				"0.82", "0.39", "4.7", "1.01", "6.17", "1.77", "0.88", "1.11", "1.92", "0.27", "0.63", "0.15", "0.22",
				"3.86", "0.78", "0.21", "0.79", "0.67", "13.1", "0.31", "2.05", "0.61", "0.36", "2.27", "0.33", "0.83",
				"0.47", "0.89", "2.21", "0.44", "1.04", "4.98", "3.98", "0.27", "0.61", "1.05", "0.11", "8.7", "2.78",
				"0.49", "1.14" }));
		psa.add(new AnalyteDate("psa", new Date(Date.UTC(2013, 6, 9, 0, 0, 0)), new String[] { "2.01", "3.23", "2.4",
				"1.62", "4.95", "0.91", "2.64", "0.61", "0.27", "0.87", "1.03", "8.26", "0.79", "0.82", "0.67", "6.5",
				"3.96", "0.55", "0.94", "0.58", "0.37", "2.81", "2.52", "1.18", "0.91", "0.14", "1.73", "6.71", "9.55",
				"5.85", "2.7", "1.03", "0.95", "8.5", "1.62", "5.31", "0.68", "0.59", "7.43", "0.84", "2.63", "4.2",
				"3.05", "1.34", "74.5", "1.32", "3.53", "1.6", "0.92", "0.59", "12.75", "0.66", "0.81", "1.31", "0.19",
				"0.84", "0.8", "2.52", "3.63", "1.91", "9.73", "6.65", "0.93", "1.53", "8.09", "1.03", "1.12", "3.81",
				"0.84", "0.35", "5.76", "7.4", "4.43", "2.23", "3.94", "0.4", "<0.03", "5.97", "1.49", "5.61", "1.07",
				"0.68", "1.77", "10.49", "1.04", "0.57", "0.95", "2.01" }));
		psa.add(new AnalyteDate("psa", new Date(Date.UTC(2013, 6, 10, 0, 0, 0)), new String[] { "2.31", "2.26", "1.64",
				"U", "0.61", "0.87", "4.03", "5.51", "1.3", "0.55", "0.65", "0.33", "7.87", "3.5", "3.05", "0.4",
				"1.94", "5.59", "1.38", "2.26", "2.33", "0.14", "1.04", "2", "1.02", "1.22", "3.45", "1.38", "1.18",
				"0.71", "1.15", "1.17", "1.21", "4.02", "0.32", "0.47", "1.92", "0.49", "0.7", "1.75", "51.49", "0.31",
				"1.39", "1.02", "0.88", "1.88", "0.55", "2.78", "1.8", "0.03", "1.43", "0.29", "0.73", "0.52", "0.46",
				"0.52", "0.63", "2.47", "1.34", "0.76", "7.58", "15.37", "1.59", "U", "0.88", "3.02", "1.4", "2.44",
				"1913", "1.59", "1.35", "0.6", "1.16", "3.77", "3.28", "0.45", "0.62", "3.36", "1.19", "1.15", "1.41",
				"0.99", "3.8", "1.37", "1.33", "11.23" }));
		psa.add(new AnalyteDate("psa", new Date(Date.UTC(2013, 6, 11, 0, 0, 0)), new String[] { "15.09", "0.37",
				"0.71", "2.37", "0.34", "1.96", "0.33", "0.7", "1.24", "0.11", "1.38", "0.64", "1.06", "4.59", "5.45",
				"0.38", "0.03", "3", "0.93", "2.9", "0.52", "1.54", "2.5", "6.15", "2.6", "1.19", "0.81", "0.23",
				"0.92", "2.43", "1.24", "0.62", "0.8", "0.49", "2.28", "2.2", "1.9", "4.69", "4.4", "0.8", "0.43",
				"<0.03", "0.49", "1.5", "1.3", "0.45", "0.03", "2.35", "49.9", "0.73", "0.75", "0.36", "2.18", "2.71",
				"1.28", "3.62", "0.75", "0.51", "2.89", "0.77", "2.82", "4.65", "0.84", "0.75", "0.65", "0.25", "0.05",
				"1.24", "5.92", "64.07", "7.22", "0.72", "0.76", "0.72", "1.22", "1.15", "9.32", "1.58", "0.39",
				"0.82", "4.87", "0.38", "<0.03", "0.92", "1.6", "0.72", "1.29", "1.02", "0.74", "3.58", "2.53", "1.2",
				"1.17", "2.66", "0.98", "2.99", "0.6" }));
		psa.add(new AnalyteDate("psa", new Date(Date.UTC(2013, 6, 12, 0, 0, 0)), new String[] { "0.91", "0.73", "8.82",
				"1.81", "0.67", "0.45", "1.03", "1.12", "0.45", "13.72", "1.15", "1.23", "0.94", "1.08", "<0.03",
				"0.54", "0.55", "2.23", "2.03", "2.36", "1.43", "12.31", "1.42", "6.1", "0.89", "4.38", "2.3", "0.77",
				"0.46", "0.5", "2.77", "1.67", "0.52", "1.3", "0.49", "<0.03", "1.23", "<0.03", "1.75", "1.18", "3.37",
				"2.18", "8.13", "8.19", "1.22", "1.83", "6.24", "0.97", "1.04", "1.18", "2.95", "0.37", "1.36", "1.78",
				"2.07", "0.98", "0.96", "2.75", "1.22", "1.89", "0.06", "<0.03", "1.44", "0.8", "1.87", "0.07", "4.98",
				"0.41", "1.15", "0.96", "3.58", "4.35", "0.4", "1.74", "5.08", "0.84", "5.12", "0.31", "0.91", "0.66",
				"0.97", "0.89", "0.7", "1.66", "2", "1.6", "1.67", "3.94", "0.53", "8.08", "2.41", "6.58", "2.23",
				"1.84" }));
		psa.add(new AnalyteDate("psa", new Date(Date.UTC(2013, 6, 15, 0, 0, 0)), new String[] { "6.41", "9.26", "4.01",
				"<0.03", "22.52", "3.93", "2.31", "5.87", "0.43", "4.83", "0.93", "1.57", "4.01", "11.66", "0.94",
				"5.47", "0.29", "0.93", "1.42", "5.78", "2.4", "11.66", "0.62", "0.27", "1.12", "0.62", "1.86", "1.24",
				"4.47", "0.83", "0.75", "0.93", "1.21", "5.66", "1.05", "<0.03", "2.69", "6.74", "91.18", "0.81",
				"2.42", "2.35", "0.95", "6.62", "1.54", "12.78", "0.14", "1.07", "0.1", "10.89", "4.42", "0.31",
				"1.44", "7.87", "1.75", "1.2", "0.65", "11.92", "1.54", "2.11", "4.82", "0.98", "1.33", "1", "0.37",
				"1.62", "0.69", "1.06", "0.16", "2.87", "0.26", "0.33", "0.81", "<0.03", "0.43", "0.8", "0.58", "0.25",
				"0.68", "0.89", "1.25", "1.63", "2.16", "5.2", "3.91", "1.12", "7.55", "3.38", "2.09", "2.09", "2.36",
				"0.91", "0.41", "0.07", "1.22", "0.48" }));
		psa.add(new AnalyteDate("psa", new Date(Date.UTC(2013, 6, 16, 0, 0, 0)), new String[] { "<0.03", "7.67",
				"79.31", "0.7", "7.74", "12.24", "0.63", "0.97", "0.4", "4.29", "0.36", "0.24", "1.44", "0.46", "1.26",
				"1.43", "1.69", "2.46", "0.76", "2.08", "0.7", "8.44", "2.29", "8.08", "1.37", "<0.03", "1.05", "15.8",
				"1.19", "1.14", "0.8", "24.03", "0.6", "3.43", "0.75", "0.35", "17.83", "1.55", "1.08", "0.26", "0.91",
				"1", "<0.03", "<0.03", "2.35", "0.09", "1.02", "0.86", "4.01", "0.89", "0.44", "0.34", "1.77", "3.58",
				"5.92", "4.91", "2.4", "3.39", "30.83", "5.23", "5.4", "0.51", "6.5", "0.48", "2.81", "1.84", "28.51",
				"11.83", "0.6", "0.49", "3.67", "1.67", "<0.03", "3.15", "4.34", "9.81", "0.34", "0.57", "8.49",
				"11.04", "3.27", "1.97", "1.94", "3.27", "1.29", "2.42", "1.15", "1.46", "0.39", "2.25", "0.6", "5.97",
				"0.89", "0.1", "1.17", "3.54", "1.46", "1.4", "3.12", "0.34", "4.34", "0.99", "6.72", "3.53", "19.51",
				"1.75", "0.91", "1.77", "0.47", "0.72", "1.19", "0.45", "1.24", "0.42", "1.36", "5.15", "4.83", "0.58",
				"1.07", "0.69", "0.78", "0.51", "1.24" }));
		psa.add(new AnalyteDate("psa", new Date(Date.UTC(2013, 6, 17, 0, 0, 0)), new String[] { "137.9", "1.74",
				"3.25", "3.18", "1.08", "0.82", "0.3", "0.43", "1.36", "0.89", "1.34", "0.84", "4.2", "1.86", "1.16",
				"2.72", "4.18", "1.2", "0.2", "3.09", "0.53", "1.04", "1.31", "1.09", "6.6", "0.18", "3.77", "0.42",
				"1.01", "6.6", "2.26", "3.43", "6.74", "0.33", "0.27", "0.78", "1.25", "5.39", "6.97", "396.3", "4.29",
				"2.26", "3.1", "0.6", "8.48", "0.48", "1.4", "0.73", "2.73", "0.24", "10.7", "2.46", "0.81", "4.42",
				"3.1", "4.96", "16.61", "0.97", "0.09", "1.1", "1.83", "0.67", "0.64", "8.83", "3.38", "5.33", "1.81",
				"0.1", "8.45", "2.41", "1.36", "1.51", "0.98", "8.55", "2.12", "2.8", "2.75", "4.13", "0.49", "0.96",
				"2.42", "4.21", "2.75", "3.42", "4.15", "4.9", "10.41", "1.49", "0.98", "1.08", "1.14", "3.63", "1.18",
				"0.49", "0.85", "0.82", "0.73", "0.76", "1.41", "0.37", "<0.03", "2.19", "1.15", "2.45", "0.72", "0.1",
				"7.26", "1.48", "0.47", "0.64", "5.21", "2.68", "0.96" }));
		psa.add(new AnalyteDate("psa", new Date(Date.UTC(2013, 6, 18, 0, 0, 0)), new String[] { "5.43", "5.18", "1.5",
				"0.48", "0.9", "3.11", "1.81", "1.78", "1.23", "2.25", "10.67", "2.5", "0.52", "1.85", "4.87", "3.32",
				"11.51", "0.44", "1.19", "3.35", "3.26", "2.2", "0.63", "3.7", "8.16", "0.38", "3.84", "0.72", "2.71",
				"0.81", "0.1", "<0.03", "0.45", "0.45", "3.45", "3.08", "<0.03", "3.46", "0.78", "1.31", "1.8", "0.39",
				"1.31", "1.66", "8.06", "13.54", "5.79", "13.5", "6.15", "1.11", "0.21", "1.5", "0.89", "3.25", "0.81",
				"6.02", "0.43", "2.12", "<0.03", "0.5", "3.25", "1.31", "7.2", "0.03", "<0.03", "6.32", "2.31", "1.81",
				"20.4", "48.1", "2.1", "1.26", "0.27", "0.76", "0.11", "0.14", "21.99", "0.39", "6.68", "0.86", "2.79",
				"0.87", "2.42", "2.67", "3.33", "1.1", "2.56", "3.22", "1.04" }));
		psa.add(new AnalyteDate("psa", new Date(Date.UTC(2013, 6, 19, 0, 0, 0)), new String[] { "5.72", "4.2", "<0.03",
				"8.65", "2.88", "2.56", "0.55", "0.98", "0.78", "1.26", "2.91", "2.01", "10.04", "4.44", "0.77",
				"4.97", "0.79", "17.1", "1.56", "6.32", "1.83", "3.74", "2", "0.99", "1.03", "0.74", "0.05", "0.55",
				"7.58", "1.5", "4.69", "2.87", "0.73", "0.71", "3.46", "1.08", "1.49", "1.03", "6.44", "1.31", "8.19",
				"3.5", "0.58", "0.57", "2.27", "0.8", "7.39", "5.81", "0.93", "2.22", "7.33", "3.77", "0.8", "0.29",
				"10.86", "<0.03", "0.68", "0.74", "0.6", "0.69", "0.84", "7.51", "4.94", "0.77", "2.52", "2.61",
				"0.79", "0.57", "0.6", "0.6", "2.24", "0.62", "4.56", "1.66", "5.68", "0.08", "1.63", "1.75", "5.72",
				"2.09", "1.33", "5.65", "1.27", "31.44", "7.2", "17.45", "0.95", "0.45", "2.23", "0.41", "2.29",
				"1.88", "4.96", "0.87", "0.8", "2.51" }));
		psa.add(new AnalyteDate("psa", new Date(Date.UTC(2013, 6, 20, 0, 0, 0)), new String[] { "1" }));
		psa.add(new AnalyteDate("psa", new Date(Date.UTC(2013, 6, 22, 0, 0, 0)), new String[] { "0.51", "0.32", "1.5",
				"2.45", "1.2", "0.35", "0.63", "1.23", "2.46", "0.81", "0.93", "1.34", "2", "1.24", "0.21", "0.85",
				"2.92", "2.87", "21.55", "3.1", "2.09", "1.49", "0.6", "1.66", "0.44", "0.8", "0.35", "1.24", "0.5",
				"11.34", "2.81", "2.71", "8.57", "4.03", "4.38", "0.85", "1.42", "5.07", "0.24", "0.46", "58.51",
				"5.72", "0.83", "4.05", "0.25", "4.58", "16.49", "3.93", "<0.03", "1.27", "3.9", "0.62", "0.35",
				"42.28", "0.73", "1.48", "24", "0.62", "1.5", "0.43", "0.5", "15.15", "1.53", "1.06", "32.7", "3.35",
				"1.82", "1.7", "6.92", "1.16", "0.55", "5.62", "1.64", "1.1", "1.54", "0.54", "1.15", "0.33", "33.2",
				"8.88" }));
		psa.add(new AnalyteDate("psa", new Date(Date.UTC(2013, 6, 23, 0, 0, 0)), new String[] { "2.63", "0.54", "2.83",
				"1.62", "1.2", "8", "1.75", "15.66", "4.25", "1.21", "3.17", "1.77", "4.59", "1.59", "1.28", "0.45",
				"1.99", "0.74", "<0.03", "2.74", "0.51", "1.8", "0.96", "0.87", "1.21", "0.38", "1.11", "2.42", "1.03",
				"0.39", "0.66", "1.42", "4.55", "0.1", "1.9", "2.14", "0.44", "5.3", "<0.03", "6.84", "0.34", "0.59",
				"0.68", "2.17", "0.63", "484.8", "16.02", "42.36", "6.8", "8.94", "0.06", "1.61", "7.41", "25.78",
				"1.52", "3.9", "6.26", "10.24", "9.25", "1.51", "0.86", "2.21", "0.79", "3.85", "1.36", "1.93", "0.99",
				"8.7", "0.67", "0.63", "1.64", "U", "0.15", "4.91", "0.43", "5.01", "5.58", "5.89", "1.57", "1.73",
				"0.67", "0.18", "9.23", "1.17", "4.4", "1.11", "0.43", "0.16", "0.47", "2.16", "0.48", "1.6", "1.11",
				"0.49", "2.22", "0.51", "0.39", "0.98", "1.21", "0.04", "1.03", "1.16", "2.5", "3.09", "0.38", "0.17",
				"1.51" }));
		psa.add(new AnalyteDate("psa", new Date(Date.UTC(2013, 6, 24, 0, 0, 0)), new String[] { "1.14", "1.22", "5.82",
				"3.44", "3.06", "2.94", "3.34", "5.19", "2.29", "0.54", "6.04", "4.08", "1.81", "0.64", "1.99", "1.82",
				"3.63", "1.08", "1.42", "0.55", "1.5", "3.6", "0.47", "77", "1.35", "0.43", "2.46", "5", "1.38",
				"2.15", "1.29", "39", "6.26", "0.54", "4.75", "195", "2.27", "9.4", "0.6", "5.25", "6.8", "2.75",
				"2.15", "1.91", "0.86", "1.57", "0.62", "2.77", "0.2", "0.5", "2.44", "0.51", "0.99", "5.67", "1.51",
				"3.63", "2.69", "456.8", "3.99", "1.29", "6.21", "3.1", "2.13", "5.01", "0.18", "1.69", "0.72", "1.17",
				"0.76", "1.04", "5.87", "0.55", "1.01", "0.62", "5.26", "0.52", "7.55", "6.7", "1.09", "2.24", "0.78",
				"0.82", "12.16", "0.41", "3.73", "1.05", "5.37", "21.4", "2.25", "4.1", "1.25", "0.49", "4.15", "1.88",
				"1.39", "6.37", "1.36", "2.8", "1.56", "4.04", "1.63", "2.37", "0.99", "1.05", "0.59", "0.83", "4.12",
				"1", "2.95", "0.89", "0.71", "5.63" }));
		psa.add(new AnalyteDate("psa", new Date(Date.UTC(2013, 6, 25, 0, 0, 0)), new String[] { "0.6", "2.38", "7.96",
				"0.75", "0.64", "0.95", "0.66", "0.64", "3.02", "0.17", "2.16", "2.58", "2.64", "1.26", "1.91", "0.7",
				"0.65", "14.2", "1.49", "1.76", "2.94", "4.48", "2.61", "1.27", "1.02", "52.64", "<0.03", "1.18",
				"0.48", "1", "0.67", "2.76", "6.25", "0.39", "0.86", "1.22", "0.96", "2.06", "0.5", "1.19", "1.31",
				"3.45", "1.97", "0.68", "3.33", "1.93", "1.12", "6.11", "1.06", "8.85", "0.69", "7.48", "1.59", "5.24",
				"2.13", "1.29", "1.6", "2.3", "11.11", "1.09", "3.06", "1.1", "0.37", "2.23", "0.91", "1.28", "2.06",
				"0.88", "2.25", "1.22", "1.92", "2.06", "0.33", "1.19", "6.8", "4", "0.91", "0.6", "5.8", "3.41",
				"8.9", "1.69", "0.87", "1.9", "7.64", "9.48", "11.05", "0.63", "0.57", "1.17", "14.02", "0.74", "3.31",
				"1.2", "1.02", "0.11", "0.77", "1.66", "0.72", "5.67", "<0.03", "0.27", "0.36", "0.69", "0.35", "2.01",
				"1.09", "1.37", "<0.03", "1.84", "0.21", "12.58", "0.29", "1.69", "0.16", "0.4", "1.19", "2.32",
				"0.34", "0.6", "1.13", "0.93", "0.36", "2.67", "2.28", "0.4", "14.87", "1.61", "0.78", "1.71", "1.02",
				"0.85", "0.46" }));
		psa.add(new AnalyteDate("psa", new Date(Date.UTC(2013, 6, 26, 0, 0, 0)), new String[] { "0.82", "3.75", "0.58",
				"0.91", "49.98", "0.89", "10.07", "1.31", "1.34", "3.7", "0.84", "0.53", "1.62", "2.14", "0.89",
				"4.33", "2.15", "1.05", "1.16", "0.53", "1.55", "6.22", "4.38", "1.6", "0.93", "0.39", "1.66", "0.96",
				"<0.03", "16.51", "3.94", "1.33", "155.8", "1.32", "10.39", "2.66", "2.45", "0.37", "0.28", "0.8",
				"0.88", "7.27", "0.82", "1.17", "3.3", "1.17", "1.29", "2.06", "6.08", "4.32", "5.36", "6.09", "5.63",
				"2.84", "1.14", "1.61", "1.09", "0.67", "0.98", "<0.03", "12.75", "7.53", "0.67", "0.9", "2.21",
				"0.41", "3.66", "2.87", "1.7", "1.15", "2.91", "<0.03", "0.6", "1.6", "6", "9.91", "1.54", "0.87",
				"1.15", "6.08", "0.2", "1.21", "0.55", "<0.03", "1.36", "1.7", "1.7", "1.19", "1.58" }));
		psa.add(new AnalyteDate("psa", new Date(Date.UTC(2013, 6, 27, 0, 0, 0)), new String[] { "1.04" }));
		psa.add(new AnalyteDate("psa", new Date(Date.UTC(2013, 6, 29, 0, 0, 0)), new String[] { "0.83", "2.21", "0.51",
				"2.72", "2.21", "2.89", "0.86", "10.23", "1.57", "4.1", "1.09", "0.27", "0.87", "1.57", "6.33", "0.73",
				"0.79", "1.81", "2.06", "1.37", "0.03", "0.71", "1.85", "1", "1.14", "0.49", "0.3", "<0.03", "4.24",
				"1.05", "0.49", "4.2", "4.46", "1.1", "6.4", "1.38", "0.65", "1.75", "7.5", "0.29", "0.44", "2.78",
				"0.84", "1.7", "7.61", "3.95", "34.81", "1.28", "0.29", "0.44", "0.58", "10.95", "1.15", "9.31",
				"3.09", "4.67", "0.64", "1.92", "4.47", "0.88", "0.41", "7.51", "5.52", "17", "1.58", "0.79", "0.52",
				"1.19", "0.05", "8.59", "6.89", "2.83", "0.79", "0.64", "1.13", "0.97", "1.08", "0.49", "0.92", "0.6",
				"<0.03", "1.46" }));
		psa.add(new AnalyteDate("psa", new Date(Date.UTC(2013, 6, 30, 0, 0, 0)), new String[] { "10.12", "0.2", "2.01",
				"1.6", "0.52", "0.89", "0.89", "4.87", "5", "1.28", "3.76", "25.09", "1.66", "0.44", "2.41", "1.16",
				"0.77", "3.35", "1.19", "6.88", "1.26", "0.31", "12.23", "4.12", "1.08", "0.54", "0.67", "0.92",
				"3.34", "1.62", "1.27", "1.95", "23.05", "8.45", "1.1", "0.68", "1.4", "<0.03", "3.34", "0.2", "1.47",
				"0.62", "0.48", "10.82", "0.73", "0.44", "0.87", "0.29", "0.78", "6.35", "2.57", "4.61", "1.48",
				"1.02", "6.17", "0.9", "0.3", "2.99", "1.67", "0.99", "0.4", "3.26", "10.64", "4.6", "0.27", "1.4",
				"365.8", "5.2", "1.98", "2.11", "0.52", "0.07", "10.07", "0.83", "2.32", "1.03", "35.19", "1.1",
				"0.59", "2.03", "4.38", "1.55", "7.3", "10.69", "0.41", "1.06", "1.71", "2.34", "1.63", "1.59", "6.34",
				"1.48", "1.46", "3.2", "0.99", "3.48", "0.3", "0.35", "5.64", "3.6", "1.76", "0.65", "0.93", "2.13",
				"5.46", "1.54", "3.7", "1.41", "0.47", "<0.03", "2.87", "5.55", "0.41", "0.45", "0.32", "0.48", "0.78",
				"1.04", "3.45" }));
		psa.add(new AnalyteDate("psa", new Date(Date.UTC(2013, 6, 31, 0, 0, 0)), new String[] { "5.8", "3.41", "1.51",
				"1.55", "2.71", "0.31", "1.74", "0.67", "0.31", "2.9", "0.67", "1.35", "<0.03", "3.12", "1.13", "1.11",
				"0.87", "5.4", "2.9", "<0.03", "0.7", "0.45", "0.75", "1.06", "1.35", "3.34", "0.6", "1.78", "0.48",
				"3.43", "1.97", "0.53", "13.47", "0.55", "1.01", "0.93", "8.75", "131.3", "1.62", "2.26", "8.66",
				"1.3", "0.64", "6.58", "1.11", "2.07", "1.49", "3.13", "30.7", "<0.03", "0.74", "0.58", "2", "<0.03",
				"1.6", "1.58", "0.84", "1.13", "5.97", "1.75", "0.9", "2.64", "3.2", "0.23", "0.73", "2.15", "8.57",
				"0.74", "0.71", "1.32", "10.08", "0.47", "79.5", "3", "2.87", "7.63", "0.44", "3.4", "0.99", "0.71",
				"9.39", "0.76", "15.34", "0.47", "1.47", "0.89", "4.11", "6.46", "1.37", "0.88", "1.22", "0.59",
				"20.46", "1.01", "0.43", "1.72", "0.75", "3.4", "0.84", "1.73", "3.98", "6.77", "2.63" }));

		return psa;
	}
}

/*
 * 
 * // Sample values for calculations // >24.0 // 2.8 // UXH
 */